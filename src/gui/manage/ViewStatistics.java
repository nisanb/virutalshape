/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.manage;

import Validators.PositiveValidator;
import gui.iWindow;
import javax.swing.JOptionPane;

/**
 *
 * @author nisan
 */
public class ViewStatistics extends javax.swing.JInternalFrame {

    /**
     * Creates new form ViewStatistics
     */
    public ViewStatistics() {
        initComponents();
        selectQuery.addItem("Customers - Attended Lessons");
        selectQuery.addItem("Customers - Visited Branch X but not Y");
        selectQuery.addItem("Lessons - Get Most Popular Lesson");
        selectQuery.addItem("Receptionist - Top of the Month");
        selectQuery.addItem("Coaches - Get ALL Senior Coaches");
        selectQuery.addItem("Receptionist - Top January Receptionist");
        selectQuery.addItem("Customer - Top Active Customer");
        selectQuery.addItem("Instrument - Top Used Instrument");
        selectQuery.addItem("Customers - Attending more than one city");
        selectQuery.addItem("Branches - Get Most Active Date Per Branch");
        selectQuery.addItem("Branches - Get Popular Branches");
        selectQuery.addItem("Customers - Get Potential Customers Per Branch");
        selectQuery.addItem("Branch - Get Total WorkTime By Branch");
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        selectQuery = new javax.swing.JComboBox<>();
        lblContent = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("IShape Statistics View");

        selectQuery.setBackground(new java.awt.Color(0, 0, 0));
        selectQuery.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        selectQuery.setForeground(new java.awt.Color(255, 255, 255));
        selectQuery.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Statistics" }));
        selectQuery.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectQueryActionPerformed(evt);
            }
        });

        lblContent.setForeground(new java.awt.Color(255, 255, 255));
        lblContent.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblContent.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblContent, javax.swing.GroupLayout.PREFERRED_SIZE, 1150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 757, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(selectQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblContent, javax.swing.GroupLayout.PREFERRED_SIZE, 644, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectQueryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectQueryActionPerformed
        // TODO add your handling code here:
        String str = "";
        if(selectQuery.getSelectedIndex()==0)
            return;
        switch(selectQuery.getSelectedIndex()){
            case 1: //getAllAttendedLessonsOfMostActiveCustomer
                str = iWindow.getDB().getAllAttendedLessonsOfMostActiveCustomer(); 
            break;
            case 2: //getAllCustomersFromBranchXbutNotFromBranchY
                String x = JOptionPane.showInputDialog("Please input Branch X Number");
                String y = JOptionPane.showInputDialog("Please input Branch X Number");
                if(PositiveValidator.isPositiveStringNum(x) && PositiveValidator.isPositiveStringNum(y)){
                    int BranchX = Integer.parseInt(x);
                    int BranchY = Integer.parseInt(y);
                    str = iWindow.getDB().getAllCustomersFromBranchXbutNotFromBranchY(BranchX, BranchY);
                } else
                    JOptionPane.showMessageDialog(this, "Input is invalid!");
                
                
            break;
            case 3: 
                str = iWindow.getDB().getTheMostPopularLessonType(); 
            break;
            case 4: 
                str = iWindow.getDB().getReceptionistOfTheMonth(); 
            break;
            case 5: 
                str = iWindow.getDB().getAllSuperSeniorCoaches(); 
            break;
            case 6: 
                str = iWindow.getDB().getTopJanuaryReceptionists(); 
            break;
            case 7: 
                str = iWindow.getDB().getTopCustomerOfTheMonth(); 
            break;
            case 8: 
                str = iWindow.getDB().getTopIstrumentType(); 
            break;
            case 9: 
                str = iWindow.getDB().getAllCustomersAttendingMoreThan1City(); 
            break;
            case 10: 
                str = iWindow.getDB().getMostActiveDatePerBranchThisMonth(); 
            break;
            case 11: 
                str = iWindow.getDB().getPopularBranches(); 
            break;
            case 12: 
                str = iWindow.getDB().getPotentialCustomersPerBranch(); 
            break;
            case 13: 
                String input = JOptionPane.showInputDialog("Please input a Branch Number");
               
                if(PositiveValidator.isPositiveStringNum(input)){
                    int BranchX = Integer.parseInt(input);

                    str = iWindow.getDB().getTotalWorkoutsByBranch(BranchX);
                } else
                    JOptionPane.showMessageDialog(this, "Input is invalid!");
            break;
            
            
        }
        
        lblContent.setText(str);
        iWindow.update();
    }//GEN-LAST:event_selectQueryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel lblContent;
    private javax.swing.JComboBox<String> selectQuery;
    // End of variables declaration//GEN-END:variables
}
