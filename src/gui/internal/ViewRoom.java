/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.internal;

import core.Customer;
import core.Instrument;
import core.Room;
import gui.iWindow;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.WritableRaster;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JLabel;



/**
 * This class displays the instruments in the room!
 * @author nisan
 */
public class ViewRoom extends javax.swing.JInternalFrame {
    private Room room;
    private int workoutNum;
    private Customer customer;
    
    /**
     * Creates new form ViewRoom
     */
    public ViewRoom(Customer cust,Room r, int wrkNum) {
        initComponents();
        this.room = r;
        this.workoutNum = wrkNum;
        customer = cust;
       updateRoom();
        
    }
    
    /**
     * Specific constructor 
     * Given a room ~ will update the form coordinately 
     * @param r 
     */
     public ViewRoom(Room r) {
        initComponents();
        this.room = r;
        this.workoutNum = 0;
       updateRoom();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGym = new javax.swing.JPanel();
        background = new javax.swing.JLabel();

        getContentPane().setLayout(null);

        pnlGym.setOpaque(false);
        pnlGym.setLayout(new java.awt.GridLayout(5, 9));
        getContentPane().add(pnlGym);
        pnlGym.setBounds(70, 200, 720, 300);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gui/instruments/ishape.png"))); // NOI18N
        getContentPane().add(background);
        background.setBounds(0, 0, 880, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents
     private static BufferedImage colorImage(BufferedImage image) {
        int width = image.getWidth();
        int height = image.getHeight();
        WritableRaster raster = image.getRaster();

        for (int xx = 0; xx < width; xx++) {
            for (int yy = 0; yy < height; yy++) {
                int[] pixels = raster.getPixel(xx, yy, (int[]) null);
                pixels[0] = 0;
                pixels[1] = 0;
                pixels[2] = 255;
                raster.setPixel(xx, yy, pixels);
            }
        }
        return image;
    }
     
     /**
      * Updates the current data using static ROOM
      */
    public void updateRoom(){
        for(Instrument ins : room.getInstruments()){
            String ext = "";
            if(!ins.getStatus()){
                 ext = "_1";
            }
            JLabel tmp = new JLabel();
            tmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gui/instruments/"+ins.getType()+ext+".png"))); // NOI18N
            pnlGym.add(tmp);
            
            Instrument tmpins = ins;
             if(ins.getStatus() && customer!=null)
            tmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                
            
               
               AddInstrumentToWorkout add = new AddInstrumentToWorkout(customer, tmpins, workoutNum);
                iWindow.openWin(add);
                 }
            
             });
           
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel background;
    private javax.swing.JPanel pnlGym;
    // End of variables declaration//GEN-END:variables
}
