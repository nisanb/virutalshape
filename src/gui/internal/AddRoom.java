package gui.internal;

import Validators.CharValidator;
import Validators.EmailValidator;
import Validators.PhoneValidator;
import Validators.PositiveValidator;
import core.Branch;
import java.awt.Color;
import utils.E_Cities;
import java.lang.*;
import java.net.URL;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import javax.swing.JCheckBox;
import javax.swing.JList;
import utils.E_Rooms;

/**
 *
 * @author nisans
 */
public class AddRoom extends javax.swing.JInternalFrame {
    
    private int WindowID = 8;
    private Branch branch;
    /**
     * Creates new form NewJInternalFrame
     */
    public AddRoom(Branch branch) {
        initComponents();
        this.branch=branch;
        setTitle(branch.getBranchName()+" -> Add Room");
        lblbranch.setText(""+branch.getBranchNumber());
        //Finished Loading
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        AddRoom = new javax.swing.JButton();
        numError = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        MessageBox = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        InsNum = new javax.swing.JTextField();
        insNumError = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        roomNumber = new javax.swing.JTextField();
        roomNumError = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        selectRoom = new javax.swing.JComboBox<>();
        people1 = new javax.swing.JTextField();
        lblbranch = new javax.swing.JLabel();

        setBackground(new Color(0,0,0,85));
        setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        setIconifiable(true);
        setMaximizable(true);
        setAutoscrolls(true);
        setFrameIcon(null);
        setInheritsPopupMenu(true);
        setMaximumSize(new java.awt.Dimension(600, 600));
        setMinimumSize(new java.awt.Dimension(600, 600));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(600, 600));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("Max Trainees");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 40, 150, 20);

        AddRoom.setBackground(new java.awt.Color(102, 102, 102));
        AddRoom.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        AddRoom.setForeground(new java.awt.Color(255, 255, 255));
        AddRoom.setText("Add Room");
        AddRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddRoomMouseClicked(evt);
            }
        });
        getContentPane().add(AddRoom);
        AddRoom.setBounds(400, 200, 150, 23);

        numError.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        numError.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(numError);
        numError.setBounds(360, 40, 210, 20);

        jLabel3.setToolTipText("Subscription Number ");
        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(204, 204, 204));
        jLabel13.setText("Branch");
        getContentPane().add(jLabel13);
        jLabel13.setBounds(30, 10, 110, 20);

        MessageBox.setBackground(new Color (0,0,0,90));
        MessageBox.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        MessageBox.setForeground(new java.awt.Color(0, 255, 0));
        getContentPane().add(MessageBox);
        MessageBox.setBounds(30, 200, 330, 20);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("Max Instruments");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 70, 150, 20);

        InsNum.setBackground(new java.awt.Color(0, 0, 0));
        InsNum.setColumns(10);
        InsNum.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        InsNum.setForeground(new java.awt.Color(255, 255, 255));
        InsNum.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        InsNum.setCaretColor(new java.awt.Color(255, 255, 255));
        InsNum.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        InsNum.setSelectionColor(new java.awt.Color(204, 204, 204));
        InsNum.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                InsNumFocusLost(evt);
            }
        });
        getContentPane().add(InsNum);
        InsNum.setBounds(180, 70, 170, 21);

        insNumError.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        insNumError.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(insNumError);
        insNumError.setBounds(360, 70, 210, 20);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("Room Number");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 100, 150, 20);

        roomNumber.setBackground(new java.awt.Color(0, 0, 0));
        roomNumber.setColumns(10);
        roomNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        roomNumber.setForeground(new java.awt.Color(255, 255, 255));
        roomNumber.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        roomNumber.setCaretColor(new java.awt.Color(255, 255, 255));
        roomNumber.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        roomNumber.setSelectionColor(new java.awt.Color(204, 204, 204));
        roomNumber.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                roomNumberFocusLost(evt);
            }
        });
        getContentPane().add(roomNumber);
        roomNumber.setBounds(180, 100, 170, 21);

        roomNumError.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        roomNumError.setForeground(new java.awt.Color(255, 0, 0));
        getContentPane().add(roomNumError);
        roomNumError.setBounds(360, 100, 210, 20);

        jLabel3.setToolTipText("Subscription Number ");
        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(204, 204, 204));
        jLabel14.setText("Room Type");
        getContentPane().add(jLabel14);
        jLabel14.setBounds(30, 130, 110, 20);

        selectRoom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Room Type" }));
        selectRoom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                selectRoomFocusLost(evt);
            }
        });
        getContentPane().add(selectRoom);
        selectRoom.setBounds(180, 130, 170, 22);
        for(E_Rooms r : E_Rooms.values()){
            selectRoom.addItem(r.toString());
        }

        people1.setBackground(new java.awt.Color(0, 0, 0));
        people1.setColumns(10);
        people1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        people1.setForeground(new java.awt.Color(255, 255, 255));
        people1.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.white));
        people1.setCaretColor(new java.awt.Color(255, 255, 255));
        people1.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        people1.setSelectionColor(new java.awt.Color(204, 204, 204));
        people1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                people1FocusLost(evt);
            }
        });
        getContentPane().add(people1);
        people1.setBounds(180, 40, 170, 21);

        lblbranch.setForeground(new java.awt.Color(255, 255, 255));
        lblbranch.setText("brandname");
        getContentPane().add(lblbranch);
        lblbranch.setBounds(180, 6, 170, 30);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void AddRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddRoomMouseClicked
        if(iWindow.DB.addRoomToBranch(roomNum, maxNumOfTrainees, maxNumOfInstruments, roomType, branch.getBranchNumber())){
            MessageBox.setForeground(Color.GREEN);
            MessageBox.setText("Successfully added room to branch" + branch.getBranchNumber());
            iWindow.log(new Date().toString() + " - " + "Successfully added room to branch" + branch.getBranchNumber());
        }       
        else{
            MessageBox.setForeground(Color.RED);
            MessageBox.setText("Failed connected room to branch" + branch.getBranchNumber());
            iWindow.log(new Date().toString() + " - " + "Failed connected room to branch" + branch.getBranchNumber());
        }
        update();
        
    }//GEN-LAST:event_AddRoomMouseClicked
            
    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_formFocusLost

    private void InsNumFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_InsNumFocusLost
       String str = InsNum.getText();
        if (!PositiveValidator.isPositiveStringNum(str)) {
            insNumError.setText("Positive digits only");
            maxNumOfInstruments = -1;
            update();
        }

        else {
            insNumError.setText(" ");
            maxNumOfInstruments = Integer.parseInt(str);
        }
        update();
    }//GEN-LAST:event_InsNumFocusLost

    private void roomNumberFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_roomNumberFocusLost
        String str = roomNumber.getText();
        if (!PositiveValidator.isPositiveStringNum(str)) {
            roomNumError.setText("Positive digits only");
            roomNum = -1;
        }
        
        else {
            roomNumError.setText(" ");
            roomNum = Integer.parseInt(str);
        }
        update();
    }//GEN-LAST:event_roomNumberFocusLost

    private void selectRoomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_selectRoomFocusLost
        if (selectRoom.getSelectedIndex() == 0) roomType = E_Rooms.GYM;
        if (selectRoom.getSelectedIndex() == 1) roomType = E_Rooms.AEROBIC;
        if (selectRoom.getSelectedIndex() == 2) roomType = E_Rooms.MATTRESSES;
            
    }//GEN-LAST:event_selectRoomFocusLost

    private void people1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_people1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_people1FocusLost
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddRoom;
    private javax.swing.JTextField InsNum;
    private javax.swing.JLabel MessageBox;
    private javax.swing.JLabel insNumError;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblbranch;
    private javax.swing.JLabel numError;
    private javax.swing.JTextField people1;
    private javax.swing.JLabel roomNumError;
    private javax.swing.JTextField roomNumber;
    private javax.swing.JComboBox<String> selectRoom;
    // End of variables declaration//GEN-END:variables
    
    //Manual variables declaration
    // create and add new Flight to IFly
    private int roomNum;
    private int maxNumOfTrainees;
    private int maxNumOfInstruments;
    private E_Rooms roomType;
    private int branchNum;
    
//    isUpdated = IShape.addRoomToBranch(roomNum, maxNumOfTrainees,
//            maxNumOfInstruments, roomType, branchNum);
    
    
    //Manual variables declaration
    public int getWindowID() {
        return this.WindowID;
    }
    
    public void setWindowID(int id) {
        this.WindowID = id;
    }
    
    public void update(){
        
        hide();
        repaint();
        show();
    }
}
